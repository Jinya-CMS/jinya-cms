.install-dependencies:
  variables:
    PHP_MEMORY_LIMIT: "2048M"
  image:
    name: quay.imanuel.dev/jinya/jinya-cms-php-base-test-image:latest
    pull_policy: always
  before_script:
    - php /usr/local/bin/composer.phar install

.build-package:
  script:
    - apk add go
    - sed -i "s/%VERSION%/${PACKAGE_VERSION}/g" ./defines.php
    - zip -r ./jinya-cms.zip ./*
    - go run ./main.go
  artifacts:
    name: "jinya-cms-${PACKAGE_VERSION}.zip"
    paths:
      - jinya-cms.zip

.build-image:
  image:
    name: quay.imanuel.dev/dockerhub/library---docker:stable
    pull_policy: always
  services:
    - docker:dind
  before_script:
    - docker login -u "$QUAY_USER" -p "$QUAY_PASSWORD" quay.imanuel.dev
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
  script:
    - sed -i "s/%VERSION%/${PACKAGE_VERSION}/g" ./defines.php
    - docker build --pull -t "quay.imanuel.dev/jinya/jinya-cms:${PACKAGE_VERSION}" -f ./Dockerfile .
    - docker tag "quay.imanuel.dev/jinya/jinya-cms:${PACKAGE_VERSION}" "quay.imanuel.dev/jinya/jinya-cms:latest"
    - docker tag "quay.imanuel.dev/jinya/jinya-cms:${PACKAGE_VERSION}" "jinyacms/jinya-cms:${PACKAGE_VERSION}"
    - docker tag "quay.imanuel.dev/jinya/jinya-cms:${PACKAGE_VERSION}" jinyacms/jinya-cms:latest
    - docker push "quay.imanuel.dev/jinya/jinya-cms:${PACKAGE_VERSION}"
    - docker push "quay.imanuel.dev/jinya/jinya-cms:latest"
    - docker push "jinyacms/jinya-cms:${PACKAGE_VERSION}"
    - docker push "jinyacms/jinya-cms:latest"

.run-tests:
  variables:
    EXECUTE_IN: "ci"
    APP_ENV: "dev"
    MYSQL_PASSWORD: "jinya"
    MYSQL_USER: "jinya"
    MYSQL_DATABASE: "jinya"
    MYSQL_HOST: "database"
    MYSQL_PORT: "3306"
    MYSQL_CHARSET: "utf8mb4"
    MAILER_HOST: "mailer"
    MAILER_PORT: "1025"
    MAILER_USERNAME: "test@example.com"
    MAILER_PASSWORD: "start1234"
    MAILER_ENCRYPTION: "tls"
    MAILER_SMTP_AUTH: "true"
    MAILER_FROM: "jinya@example.com"
    JINYA_API_KEY_EXPIRY: "315360000"
    JINYA_UPDATE_SERVER: "https://releases.jinya.de/cms"
    INSTALLED_VERSION: "phpunit"
  script:
    - ./vendor/bin/phpunit --no-progress --log-junit report.xml --configuration phpunit.ci.xml --coverage-cobertura=coverage.cobertura.xml
  artifacts:
    when: always
    paths:
      - report.xml
    reports:
      junit:
        - report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.cobertura.xml

stages:
  - lint
  - test
  - deploy-package
  - deploy-docker
  - deploy-pages

services:
  - name: quay.imanuel.dev/dockerhub/mailhog---mailhog:latest
    alias: mailer

phpstan:
  extends:
    - .install-dependencies
  stage: lint
  script:
    - ./vendor/bin/phpstan --no-progress analyze ./src ./app ./cli ./public --memory-limit 1G

phpunit-mysql:
  extends:
    - .install-dependencies
    - .run-tests
  services:
    - name: quay.imanuel.dev/dockerhub/mailhog---mailhog:latest
      alias: mailer
    - name: quay.imanuel.dev/dockerhub/library---mysql:8
      alias: database
      variables:
        MYSQL_DATABASE: "jinya"
        MYSQL_PASSWORD: "jinya"
        MYSQL_ROOT_PASSWORD: "jinya"
        MYSQL_USER: "jinya"
  stage: test
  needs:
    - phpstan

phpunit-mariadb:
  extends:
    - .install-dependencies
    - .run-tests
  services:
    - name: quay.imanuel.dev/dockerhub/mailhog---mailhog:latest
      alias: mailer
    - name: quay.imanuel.dev/dockerhub/library---mariadb:10
      alias: database
      variables:
        MYSQL_DATABASE: "jinya"
        MYSQL_PASSWORD: "jinya"
        MYSQL_ROOT_PASSWORD: "jinya"
        MYSQL_USER: "jinya"
  stage: test
  needs:
    - phpunit-mysql

phpunit-percona:
  extends:
    - .install-dependencies
    - .run-tests
  services:
    - name: quay.imanuel.dev/dockerhub/mailhog---mailhog:latest
      alias: mailer
    - name: quay.imanuel.dev/dockerhub/percona---percona-server:8.0
      alias: database
      variables:
        MYSQL_DATABASE: "jinya"
        MYSQL_PASSWORD: "jinya"
        MYSQL_ROOT_PASSWORD: "jinya"
        MYSQL_USER: "jinya"
  stage: test
  needs:
    - phpunit-mariadb

deploy-tag-package:
  extends:
    - .install-dependencies
    - .build-package
  stage: deploy-package
  variables:
    PACKAGE_VERSION: $CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: phpunit-mysql
    - job: phpunit-mariadb
    - job: phpunit-percona
    - job: phpstan

deploy-tag-image:
  stage: deploy-docker
  extends:
    - .build-image
  variables:
    PACKAGE_VERSION: ${CI_COMMIT_TAG}
  rules:
    - if: $CI_COMMIT_TAG
      exists:
        - Dockerfile
  needs:
    - job: phpunit-mysql
    - job: phpunit-mariadb
    - job: phpunit-percona
    - job: phpstan

deploy-main-package:
  extends:
    - .install-dependencies
    - .build-package
  stage: deploy-package
  variables:
    PACKAGE_VERSION: 26.0.${CI_PIPELINE_IID}-unstable
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - job: phpunit-mysql
    - job: phpunit-mariadb
    - job: phpunit-percona
    - job: phpstan

deploy-main-image:
  stage: deploy-docker
  extends:
    - .build-image
  variables:
    PACKAGE_VERSION: 26.0.${CI_PIPELINE_IID}-unstable
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      exists:
        - Dockerfile
  needs:
    - job: phpunit-mysql
    - job: phpunit-mariadb
    - job: phpunit-percona
    - job: phpstan

pages:
  extends:
    - .install-dependencies
  stage: deploy-pages
  script:
    - rm -rf public/
    - wget https://phpdoc.org/phpDocumentor.phar
    - chmod +x phpDocumentor.phar
    - ./phpDocumentor.phar
    - mv docs/ public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG