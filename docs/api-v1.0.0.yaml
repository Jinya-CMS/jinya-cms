openapi: 3.0.3
info:
    title: Drachensachen
    description: Drachensachen API
    version: 1.0.0
contact:
    name: Hans-JÃ¼rgen Wandschneider
    url: https://drachensachen.wandschneider.dev
    email: juergen@wandschneider.dev
servers:
    - url: https://drachensachen.wandschneider.dev
      description: Drachensachen Production Server

paths:
    /api/login:
        summary: Path for login related actions
        description: >-
            Perform a POST request to login, a DELETE request to logout and a HEAD
            request to validate the API key
        post:
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/login_request'
                required: true
            tags:
                - Authentication
            responses:
                '200':
                    description: Returned when the username, password and two factor code are valid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/login_response'
                '204':
                    description: Returned when the request for the two factor code was successful
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_details'
                    description: The username, password or two factor code are invalid
            operationId: login
            summary: Performs a login or requests the two factor code
            description: Performs the login
            security:
                - Panda: [ ]
        delete:
            tags:
                - Authentication
            responses:
                '204':
                    description: The logout was successful
                '401':
                    description: The api token is invalid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_details'
            security:
                - Panda: [ ]
            operationId: logout
            summary: Performs a logout
            description: Performs a logout and deletes the api token from the server
        head:
            tags:
                - Authentication
            responses:
                '204':
                    description: The api token is valid
                '401':
                    description: The api token is invalid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error_details'
            security:
                - User: [ ]
            operationId: validate_token
            summary: Validates the api token
            description: >-
                Checks whether the api token passed in the `Authorization`-header is
                valid
        parameters: [ ]
components:
    schemas:
        login_request:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
                twoFactorCode:
                    type: string
            required:
                - email
                - password
        login_response:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/user'
                token:
                    type: string
            required:
                - user
                - token
            additionalProperties: false
        user:
            type: object
            properties:
                id:
                    type: integer
                displayName:
                    type: string
                email:
                    type: string
                    format: email
                isMod:
                    type: boolean
                appTotpEnabled:
                    type: boolean
            required:
                - displayName
                - email
                - isMod
                - appTotpEnabled
        error_details:
            title: Root Type for ErrorDetails
            type: object
            properties:
                entityType:
                    type: string
                    enum:
                        - user
                        - character
                        - event
                errorType:
                    enum:
                        - NotFound
                        - ExistsAlready
                        - InvalidData
                        - Io
                        - Db
                        - Serialization
                        - Validation
                        - InsufficientRights
                        - Unauthorized
                        - Unknown
                    type: string
                message:
                    type: string
            example:
                entityType: crafter
                errorType: NotFound
                message: The crafter was not found
            required:
                - message
                - errorType
                - entityType
    securitySchemes:
        User:
            type: apiKey
            description: The Pandaparty API key
            name: Authorization
            in: header
        parameters: { }
    security:
        -   User: [ ]
tags:
    - name: Authentication
      description: All endpoints around the authentication of users
